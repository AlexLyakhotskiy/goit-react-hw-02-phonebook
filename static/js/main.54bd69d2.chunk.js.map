{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactForm","state","name","number","onInputChange","e","currentTarget","value","setState","onSubmit","preventDefault","props","id","uuidv4","this","wrapper","form","label","onChange","type","input","pattern","title","required","button","Component","Filter","ContactList","data","remove","list","map","item","text","onClick","App","contacts","filter","addContact","contact","findDuplicateContact","alert","prevState","deleteContact","contactId","el","filterContact","normalizeStr","toLowerCase","cont","includes","contactToAdd","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54bd69d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__2dX-y\",\"form\":\"ContactForm_form__1-zQq\",\"label\":\"ContactForm_label__3wdX_\",\"input\":\"ContactForm_input__3Qng_\",\"button\":\"ContactForm_button__1JwaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1ztJG\",\"text\":\"ContactList_text__7CXrU\",\"button\":\"ContactList_button__1pWYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2wjJ-\",\"input\":\"Filter_input__1oPtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__YSuqx\"};","import React from 'react';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onInputChange = e => {\r\n    const { value, name } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    });\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <form onSubmit={this.onSubmit} className={styles.form}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              value={name}\r\n              onChange={this.onInputChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={styles.input}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              value={number}\r\n              onChange={this.onInputChange}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              className={styles.input}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      value={value}\r\n      onChange={onChange}\r\n      className={styles.input}\r\n      name=\"filter\"\r\n      type=\"text\"\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ data, remove }) => (\r\n  <ul className={styles.list}>\r\n    {data.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.item}>\r\n        <p className={styles.text}>{name}:</p>\r\n        <p className={styles.text}>{number}</p>\r\n        <button\r\n          onClick={() => remove(id)}\r\n          className={styles.button}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  remove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = contact => {\n    if (this.findDuplicateContact(contact)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(el => el.id !== contactId),\n    }));\n  };\n\n  onInputChange = e => {\n    const { value, name } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  filterContact = () => {\n    const normalizeStr = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(cont =>\n      cont.name.toLowerCase().includes(normalizeStr),\n    );\n  };\n\n  findDuplicateContact(contact) {\n    const { contacts } = this.state;\n    const contactToAdd = contact.name.toLowerCase();\n    return contacts.find(el => el.name.toLowerCase() === contactToAdd);\n  }\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.onInputChange} />\n        <ContactList data={this.filterContact()} remove={this.deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}